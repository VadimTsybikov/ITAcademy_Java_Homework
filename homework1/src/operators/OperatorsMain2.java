package operators;

public class OperatorsMain2 {
    public static void main(String[] args) {
        int x1 = 5 + 2 / 8;
        //  2 / 8 = 0;
        //  5 + 0 = 5;
        //  Результат: 5.

        int x2 = (5 + 2) / 8;
        //  5 + 2 = 7;
        //  7 / 8 = 0;
        //  Результат: 0.

        //int x3 = (5 + 2++) / 8;
        //  Некорректна операция 2++ - инкремент константы, но если это опустить:
        //  2++ - вычисляется после присваивания, в выражении используется 2;
        //  5 + 2 = 7;
        //  7 / 8 = 0;
        //  Результат: 0.

        //int x4 = (5 + 2++) / --8;
        //  Некорректны операции 2++ и --8 - инкремент и декремент константы, но если это опустить:
        //  2++ - вычисляется после присваивания, в выражении используется 2;
        //  --8 = 7;
        //  5 + 2 = 7;
        //  7 / 7 = 1;
        //  Результат: 1.

        //int x5 = (5 + 2 >> 2++) / --8;
        //  Некорректны операции 2++ и --8 - инкремент и декремент константы, но если это опустить:
        //  2++ - вычисляется после присваивания, в выражении используется 2;
        //  --8 = 7;
        //  5 + 2 = 7;
        //  7 >> 2 = 0000_0111 >> 2 = 0000_0001 = 1;
        //  1 / 7 = 0;
        //  Результат: 0.

        //int x6 = (5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8;
        //  Некорректны операции 2++ и --8 - инкремент и декремент константы, но если это опустить:
        //  2++ - вычисляется после присваивания, в выражении используется 2;
        //  --8 = 7;
        //  22 * 2 = 44;
        //  5 + 7 = 12;
        //  44 >> 2 = 0010_1100 >> 2 = 0000_1011 = 11;
        //  12 > 20 = false;
        //  false ? 68 : 11 = 11;
        //  11 / 7 = 1;
        //  Результат: 1.

        //int x7 = (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --8;
        //  Некорректны операции 2++ и --8 - инкремент и декремент константы, но если это опустить:
        //  2++ - вычисляется после присваивания, в выражении используется 2;
        //  --8 = 7;
        //  22 * 2 = 44;
        //  5 + 7 = 12;
        //  44 >> 2 = 0010_1100 >> 2 = 0000_1011 = 11;
        //  12 > 20 = false;
        //  68 >= 68 = true;
        //  false ? true : 11 - несоответствие типов boolean и int;
        //  Результат: exception.

        boolean x8 = 6 - 2 > 3 && 12 * 12 <= 119;
        //  12 * 12 = 144;
        //  6 - 2 = 4;
        //  4 > 3 = true;
        //  144 <= 119 = false;
        //  true && false = false;
        //  Результат: false

        boolean x9 = true && false;
        //  true && false = false
        //  Результат: false
    }
}
